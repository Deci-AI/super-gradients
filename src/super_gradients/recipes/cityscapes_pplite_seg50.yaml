#  PPLiteSeg segmentation training example with Cityscapes dataset.
#  Torch implementation of the paper:
#     Juncai Peng, Yi Liu, Shiyu Tang, Yuying Hao, Lutao Chu, Guowei Chen, Zewu Wu, Zeyu Chen, Zhiliang Yu, Yuning Du,
#     Qingqing Dang,Baohua Lai, Qiwen Liu, Xiaoguang Hu, Dianhai Yu, Yanjun Ma.
#     PP-LiteSeg: A Superior Real-Time Semantic Segmentation Model.
#
#  Usage PPLite-T-Seg50:
#      python -m torch.distributed.launch --nproc_per_node=4 train_from_recipe.py --config-name=cityscapes_pplite_seg50 checkpoint_params.external_checkpoint_path=<stdc1-backbone-pretrained-path> architecture=pp_liteseg_t
#  Usage PPLite-B-Seg50:
#      python -m torch.distributed.launch --nproc_per_node=4 train_from_recipe.py --config-name=cityscapes_pplite_seg50 checkpoint_params.external_checkpoint_path=<stdc2-backbone-pretrained-path> architecture=pp_liteseg_b
#
#
#  Validation mIoU - Cityscapes, training time:
#      PPLite-T-Seg50:    input-size: [512, 1024]     mIoU: 74.92     4 X RTX A5000, 13 H
#      PPLite-B-Seg50:    input-size: [512, 1024]     mIoU: 76.48     4 X RTX A5000, 14 H
#
#  Official git repo:
#      https://github.com/PaddlePaddle/PaddleSeg/
#  Paper:
#      https://arxiv.org/abs/2204.02681
#
#  Pretrained checkpoints:
#      Backbones- downloaded from the STDC author's official repo.
#       PPLite-T-Seg50, (STDC1-backbone):   https://deci-pretrained-models.s3.amazonaws.com/stdc_backbones/stdc1_imagenet_pretrained.pth
#       PPLite-B-Seg50, (STDC2-backbone):   https://deci-pretrained-models.s3.amazonaws.com/stdc_backbones/stdc2_imagenet_pretrained.pth
#
#      Logs, tensorboards and network checkpoints:
#       PPLite-T-Seg50: https://deci-pretrained-models.s3.amazonaws.com/ppliteseg/cityscapes/pplite_t_seg50/
#       PPLite-B-Seg50: https://deci-pretrained-models.s3.amazonaws.com/ppliteseg/cityscapes/pplite_b_seg50/
#
#  Learning rate and batch size parameters, using 2 RTX A5000 with DDP:
#      PPLite-T-Seg50:    input-size: [512, 1024]     initial_lr: 0.01    batch-size: 8 * 4gpus = 32
#      PPLite-B-Seg50:    input-size: [512, 1024]     initial_lr: 0.01    batch-size: 8 * 4gpus = 32
#
#  Comments:
#      * ImageNet Pretrained backbones were used.

defaults:
  - cityscapes_stdc_base
  - _self_

dataset_params:
  _convert_: all
  batch_size: 8
  val_batch_size: 8
  crop_size: [1024, 512]
  eval_scale: 0.5
  random_scales: [ 0.125, 1.5 ]

training_hyperparams:
  max_epochs: 800
  loss:
    dice_ce_edge_loss:
      num_classes: 19
      ignore_index: 19
      num_aux_heads: 3
      num_detail_heads: 0
      weights: [ 1., 1., 1., 1. ]
      dice_ce_weights: [ 1., 1. ]
      ce_edge_weights: [ .5, .5 ]
      edge_kernel: 5
  loss_logging_items_names: [main_loss, aux_loss1, aux_loss2, aux_loss3, loss]

  sg_logger: wandb_sg_logger
  sg_logger_params:
    project_name: PPLiteSeg
    entity: algo
    api_server: https://wandb.research.deci.ai
    save_checkpoints_remote: True
    save_tensorboard_remote: True
    save_logs_remote: True

architecture: pp_liteseg_t
experiment_name: ${architecture}_50_cityscapes
