# Custom recipe to train YoloX on NewData dataset

defaults:
  - training_hyperparams: coco2017_yolox_train_params
  - dataset_params: coco_detection_dataset_params
  - checkpoint_params: default_checkpoint_params
  - _self_
  - variable_setup

arch_params:
  num_classes: 17

checkpoint_params:
  load_checkpoint: True
  # checkpoint_path: /path/to/pretrained/weights/ckpt_best.pth
  pretrained_weights: coco
  # num_classes of checkpoint_path/ pretrained_weights, when checkpoint_path is not None.
  # Used when num_classes != checkpoint_num_class.
  # In this case, the module will be initialized with checkpoint_num_class, then weights will be loaded.
  # Finally model.replace_head(new_num_classes=num_classes) is called to replace the head with new_num_classes.
  # checkpoint_num_classes: 11 # number of classes in the checkpoint

dataset_params:
  train_dataset_params:
    data_dir: /path/to/new/data # Where the data is stored.
    images_dir: all_images # Local path to directory that includes all the images. Path relative to `data_dir`. Can be the same as `labels_dir`.
    json_file: COCO/train.json # Local path to json annotation file 
    all_classes_list: [image, page_number, paraprgaphs_in_image, paraprgaph, subheading, page_header, formulas, other, table, page_footer, title, form, paraprgaphs_in_form, checkbox_checked, checkbox, radio_button, radio_button_checked] # List of classes used in your dataset.
    # class_inclusion_list: [image, page_number, paraprgaph, subheading, page_header, formulas, other, table, page_footer, title, form, checkbox_checked, checkbox, radio_button, radio_button_checked]
    input_dim: [1025, 1025]
    transforms:
      - DetectionRandomPaddedRescale:
          input_dim: [[480,480],[512,512],[1024,1024]] # Add more different training resolutions (multiplications of 32)
      - DetectionTargetsFormatTransform:
          output_format: LABEL_CXCYWH

  train_dataloader_params:
    dataset: DocLayNetDetectionDataset
    batch_size: 4
    num_workers: 4

  val_dataset_params:
    data_dir: /path/to/new/data
    images_dir: all_images
    json_file: COCO/val.json
    all_classes_list: [image, page_number, paraprgaphs_in_image, paraprgaph, subheading, page_header, formulas, other, table, page_footer, title, form, paraprgaphs_in_form, checkbox_checked, checkbox, radio_button, radio_button_checked] # List of classes used in your dataset.
    # class_inclusion_list: [image, page_number, paraprgaph, subheading, page_header, formulas, other, table, page_footer, title, form, checkbox_checked, checkbox, radio_button, radio_button_checked]
    transforms:
      - DetectionPaddedRescale:
          input_dim: [512, 512] 
      - DetectionTargetsFormatTransform:
          output_format: LABEL_CXCYWH

  val_dataloader_params:
    dataset: DocLayNetDetectionDataset
    batch_size: 4
    num_workers: 4

resume: False
training_hyperparams:
  neptune_logging:
    name: <task_id>_<task_description>
    tags: ["task_id", "tag1", "tag2"]
  resume: ${resume}
  max_epochs: 100
  criterion_params:
    num_classes: ${arch_params.num_classes}
  valid_metrics_list:
    - DetectionMetrics:
        normalize_targets: True
        post_prediction_callback:
          _target_: super_gradients.training.models.detection_models.yolo_base.YoloXPostPredictionCallback
          iou: 0.65
          conf: 0.01
        num_cls: ${arch_params.num_classes}
        include_classwise_ap: true
        class_names: ${dataset_params.train_dataset_params.all_classes_list}

architecture: yolox_l

experiment_name: ${training_hyperparams.neptune_logging.name}
