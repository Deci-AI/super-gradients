batch_size: 64 # batch size for trainset in DatasetInterface
val_batch_size: 200 # batch size for valset in DatasetInterface
dataset_dir: /data/Imagenet # path to imagenet directory (local)
traindir: train # dirname inside dataset_dir holding trainset files
valdir: val # dirname inside dataset_dir holding valset files
img_mean: [0.485, 0.456, 0.406] # mean for normalization
img_std: [0.229, 0.224, 0.225] # std for normalization
crop_size: 224 # crop size (size of net's input)
resize_size: 256 # loaded image resize size (appplied first among preprocessing transforms)
color_jitter: 0.0 # color jitter augmentation (applied only to trainset)
imagenet_pca_aug: 0.0 # imagenet pca augmentation (applied only to trainset)
train_interpolation: default # interpolation mode
rand_augment_config_string: # randaugment config string (see super_gradients/training/datasets/auto_augment.py)
random_erase_prob: 0.0 # random erase probability (applied only to trainset)
aug_repeat_count: 0 # amount of repetitions (each repetition of an example is augmented differently) for a trainset example.


# TODO: REMOVE ABOVE, HERE FOR COMPATIBILITY UNTIL WE REMOVE DATASET_INTERFACE
#dataset_dir: /data/Imagenet     # path to imagenet directory (local)
#img_mean: [0.485, 0.456, 0.406] # mean for normalization
#img_std: [0.229, 0.224, 0.225]  # std  for normalization

# train_transform_args and val_transform_args allow us to easily modify the transform ars without needing to redifine
# the whole list of transform everytime
train_transform_args:
  crop_size: 224
  interpolation: default
  auto_augment_config_string:
  color_jitter: [0., 0., 0.]
  alphastd: 0.
  random_erase_prob: 0.
  random_erase_value: 0.

val_transform_args:
  resize_size: 256 # loaded image resize size (appplied first among preprocessing transforms)
  crop_size: 224 # crop size (size of net's input)


# The following will directly be used to instantiate datasets and dataloaders.
train_dataset_params:
  root: ${dataset_params.dataset_dir}/train
  transform:
    Compose:
      transforms:
        - RandomResizedCropAndInterpolation:
            size: ${dataset_params.train_transform_args.crop_size}
            interpolation: ${dataset_params.train_transform_args.interpolation}
        - RandomHorizontalFlip
        - color_augmentation:
            rand_augment_config_string: ${dataset_params.train_transform_args.auto_augment_config_string}
            color_jitter: ${dataset_params.train_transform_args.color_jitter}
            crop_size: ${dataset_params.train_transform_args.crop_size}
            img_mean: ${dataset_params.img_mean}
        - ToTensor
        - Lighting:
            alphastd: ${dataset_params.train_transform_args.alphastd}
        - Normalize:
            mean: ${dataset_params.img_mean}
            std: ${dataset_params.img_std}
        - RandomErase:
            probability: ${dataset_params.train_transform_args.random_erase_prob}
            value: ${dataset_params.train_transform_args.random_erase_value}

val_dataset_params:
  root: ${dataset_params.dataset_dir}/val
  transform:
    Compose:
      transforms:
        - Resize:
            size: ${dataset_params.val_transform_args.resize_size}
        - CenterCrop:
            size: ${dataset_params.val_transform_args.crop_size}
        - ToTensor
        - Normalize:
            mean: ${dataset_params.img_mean}
            std: ${dataset_params.img_std}

train_dataloader_params:
  batch_size: 64
  num_workers: 8
  drop_last: False
  pin_memory: True
  worker_init_fn:
    _target_: super_gradients.training.utils.utils.load_func
    dotpath: super_gradients.training.datasets.datasets_utils.worker_init_reset_seed

val_dataloader_params:
  batch_size: 200
  num_workers: 8
  drop_last: False
  pin_memory: True
  worker_init_fn:
    _target_: super_gradients.training.utils.utils.load_func
    dotpath: super_gradients.training.datasets.datasets_utils.worker_init_reset_seed


_convert_: all