defaults:
  - coco_detection_yolox_dataset_params

batch_size: 32
val_batch_size: 16
train_input_dim: (320, 320)
val_input_dim: (320, 320)

targets_format:
  _target_: super_gradients.training.utils.detection_utils.DetectionTargetsFormat
  value: LABEL_NORMALIZED_CXCYWH

train_transforms:
  - _target_: super_gradients.training.transforms.transforms.DetectionRandomAffine
    degrees: 0.                   # rotation degrees, randomly sampled from [-degrees, degrees]
    translate: 0.1                # image translation fraction
    scales: [0.5, 1.5]            # random rescale range (keeps size by padding/cropping) after mosaic transform.
    shear: 0.                     # shear degrees, randomly sampled from [-degrees, degrees]
    target_size: ${train_input_dim}
    filter_box_candidates: True   # whether to filter out transformed bboxes by edge size, area ratio, and aspect ratio.
    wh_thr: 2                     # edge size threshold when filter_box_candidates = True (pixels)
    area_thr: 0.1                 # threshold for area ratio between original image and the transformed one, when when filter_box_candidates = True
    ar_thr: 20                    # aspect ratio threshold when filter_box_candidates = True
  - _target_: super_gradients.training.transforms.transforms.DetectionHSV
    prob: 1.0                       # probability to apply HSV transform
    hgain: 5                        # HSV transform hue gain (randomly sampled from [-hgain, hgain])
    sgain: 30                       # HSV transform saturation gain (randomly sampled from [-sgain, sgain])
    vgain: 30                       # HSV transform value gain (randomly sampled from [-vgain, vgain])
  - _target_: super_gradients.training.transforms.transforms.DetectionHorizontalFlip
    prob: 0.5                       # probability to apply horizontal flip
  - _target_: super_gradients.training.transforms.transforms.DetectionPaddedRescale
    input_dim: ${train_input_dim}
    max_targets: 120
  - _target_: super_gradients.training.transforms.transforms.DetectionTargetsFormatTransform
    output_format: ${targets_format}

val_transforms:
  - _target_: super_gradients.training.transforms.transforms.DetectionPaddedRescale
    input_dim: ${val_input_dim}
  - _target_: super_gradients.training.transforms.transforms.DetectionTargetsFormatTransform
    max_targets: 50
    output_format: ${targets_format}
