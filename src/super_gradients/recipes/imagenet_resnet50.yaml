#  ResNet50 Imagenet classification training:
#  This example trains with batch_size = 64 * 4 GPUs, total 256.
#  Training time on 4 x GeForce RTX A5000 is 15min / epoch.
#  Reach => 79.47 Top1 accuracy.
#
#  Log and tensorboard at s3://deci-pretrained-models/ResNet50_ImageNet/average_model.pth

# Instructions:
#   0. Make sure that the data is stored in dataset_params.dataset_dir or add "dataset_params.data_dir=<PATH-TO-DATASET>" at the end of the command below (feel free to check ReadMe)
#   1. Move to the project root (where you will find the ReadMe and src folder)
#   2. Run the command:
#       python -m torch.distributed.launch --nproc_per_node=4 src/super_gradients/examples/train_from_recipe_example/train_from_recipe.py --config-name=imagenet_resnet50


defaults:
  - training_hyperparams: imagenet_resnet50_train_params
  - dataset_params: imagenet_dataset_params
  - arch_params: resnet50_arch_params
  - checkpoint_params: default_checkpoint_params

arch_params:
  droppath_prob: 0.05

dataset_params:
  resize_size: 236
  random_erase_prob: 0
  random_erase_value: random
  train_interpolation: random
  rand_augment_config_string: rand-m7-mstd0.5
  cutmix: True
  cutmix_params:
    mixup_alpha: 0.2
    cutmix_alpha: 1.0
    label_smoothing: 0.1

dataset_interface:
  imagenet:
    dataset_params: ${dataset_params}

data_loader_num_workers: 8

model_checkpoints_location: local
load_checkpoint: False
checkpoint_params:
  load_checkpoint: ${load_checkpoint}

experiment_name: resnet50_imagenet

ckpt_root_dir:

multi_gpu:
  _target_: super_gradients.training.sg_model.MultiGPUMode
  value: 'DDP'

sg_model:
  _target_: super_gradients.SgModel
  experiment_name: ${experiment_name}
  model_checkpoints_location: ${model_checkpoints_location}
  ckpt_root_dir: ${ckpt_root_dir}
  multi_gpu: ${multi_gpu}

architecture: resnet50